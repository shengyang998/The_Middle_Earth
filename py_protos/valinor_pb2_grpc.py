# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import valinor_pb2 as valinor__pb2


class ValinorStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CallRobot = channel.unary_unary(
        '/Valinor.Valinor/CallRobot',
        request_serializer=valinor__pb2.ValinorRequest.SerializeToString,
        response_deserializer=valinor__pb2.ValinorReply.FromString,
        )


class ValinorServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def CallRobot(self, request, context):
    """Gandalf <-> Gondor <-> Valinor
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ValinorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CallRobot': grpc.unary_unary_rpc_method_handler(
          servicer.CallRobot,
          request_deserializer=valinor__pb2.ValinorRequest.FromString,
          response_serializer=valinor__pb2.ValinorReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Valinor.Valinor', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
