# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import shadowfax_pb2 as shadowfax__pb2


class UserAccountStub(object):
  """MARK: UserAccount
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Signup = channel.unary_unary(
        '/ShadowFax.UserAccount/Signup',
        request_serializer=shadowfax__pb2.SignupRequest.SerializeToString,
        response_deserializer=shadowfax__pb2.UserAccountReply.FromString,
        )
    self.ChangePhone = channel.unary_unary(
        '/ShadowFax.UserAccount/ChangePhone',
        request_serializer=shadowfax__pb2.ChangePhoneRequest.SerializeToString,
        response_deserializer=shadowfax__pb2.UserAccountReply.FromString,
        )


class UserAccountServicer(object):
  """MARK: UserAccount
  """

  def Signup(self, request, context):
    """Gandalf <-> Gondor <-> UserAccount
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ChangePhone(self, request, context):
    """rpc Signin (SigninRequest) returns (UserAccountReply) {}
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_UserAccountServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Signup': grpc.unary_unary_rpc_method_handler(
          servicer.Signup,
          request_deserializer=shadowfax__pb2.SignupRequest.FromString,
          response_serializer=shadowfax__pb2.UserAccountReply.SerializeToString,
      ),
      'ChangePhone': grpc.unary_unary_rpc_method_handler(
          servicer.ChangePhone,
          request_deserializer=shadowfax__pb2.ChangePhoneRequest.FromString,
          response_serializer=shadowfax__pb2.UserAccountReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ShadowFax.UserAccount', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class ImladrisStub(object):
  """message GetUserUUIDRequest {
  string uuid = 1;
  string token = 2;
  string dist_phone = 3;
  }

  message GetUserUUIDReplay {
  int32 status_code = 1;
  string dist_uuid = 2;
  }

  MARK: Imladris
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SendTo = channel.unary_unary(
        '/ShadowFax.Imladris/SendTo',
        request_serializer=shadowfax__pb2.SendToRequest.SerializeToString,
        response_deserializer=shadowfax__pb2.SendToReply.FromString,
        )
    self.Signin = channel.unary_unary(
        '/ShadowFax.Imladris/Signin',
        request_serializer=shadowfax__pb2.SigninRequest.SerializeToString,
        response_deserializer=shadowfax__pb2.SigninReply.FromString,
        )
    self.Signal = channel.unary_unary(
        '/ShadowFax.Imladris/Signal',
        request_serializer=shadowfax__pb2.SignalRequest.SerializeToString,
        response_deserializer=shadowfax__pb2.SignalReply.FromString,
        )
    self.GetUUID = channel.unary_unary(
        '/ShadowFax.Imladris/GetUUID',
        request_serializer=shadowfax__pb2.GetUUIDRequest.SerializeToString,
        response_deserializer=shadowfax__pb2.GetUUIDReply.FromString,
        )


class ImladrisServicer(object):
  """message GetUserUUIDRequest {
  string uuid = 1;
  string token = 2;
  string dist_phone = 3;
  }

  message GetUserUUIDReplay {
  int32 status_code = 1;
  string dist_uuid = 2;
  }

  MARK: Imladris
  """

  def SendTo(self, request, context):
    """Gandalf <-> Gondor <-> Imladris
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Signin(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Signal(self, request, context):
    """TODO: Signaling channel
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetUUID(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ImladrisServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SendTo': grpc.unary_unary_rpc_method_handler(
          servicer.SendTo,
          request_deserializer=shadowfax__pb2.SendToRequest.FromString,
          response_serializer=shadowfax__pb2.SendToReply.SerializeToString,
      ),
      'Signin': grpc.unary_unary_rpc_method_handler(
          servicer.Signin,
          request_deserializer=shadowfax__pb2.SigninRequest.FromString,
          response_serializer=shadowfax__pb2.SigninReply.SerializeToString,
      ),
      'Signal': grpc.unary_unary_rpc_method_handler(
          servicer.Signal,
          request_deserializer=shadowfax__pb2.SignalRequest.FromString,
          response_serializer=shadowfax__pb2.SignalReply.SerializeToString,
      ),
      'GetUUID': grpc.unary_unary_rpc_method_handler(
          servicer.GetUUID,
          request_deserializer=shadowfax__pb2.GetUUIDRequest.FromString,
          response_serializer=shadowfax__pb2.GetUUIDReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ShadowFax.Imladris', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class ValinorStub(object):
  """MARK: Valinor
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CallRobot = channel.unary_unary(
        '/ShadowFax.Valinor/CallRobot',
        request_serializer=shadowfax__pb2.ValinorRequest.SerializeToString,
        response_deserializer=shadowfax__pb2.ValinorReply.FromString,
        )


class ValinorServicer(object):
  """MARK: Valinor
  """

  def CallRobot(self, request, context):
    """Gandalf <-> Gondor <-> Valinor
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ValinorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CallRobot': grpc.unary_unary_rpc_method_handler(
          servicer.CallRobot,
          request_deserializer=shadowfax__pb2.ValinorRequest.FromString,
          response_serializer=shadowfax__pb2.ValinorReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ShadowFax.Valinor', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
